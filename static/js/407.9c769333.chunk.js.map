{"version":3,"file":"static/js/407.9c769333.chunk.js","mappings":"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","sources":["components/contactList/ContactList.styled.jsx","components/updateForm/UpdateForm.styled.jsx","components/updateForm/UpdateForm.jsx","components/contactList/ContactList.jsx","components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.jsx","components/filter/Filter.styled.jsx","components/filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListOfContact = styled.ul`\nmargin-left: auto;\n    margin-right: auto;\n    width: 500px;\n    padding: 20px;\n    background-color: #fff;\n    border: 1px solid #879cb7;\n    border-radius: 15px;\n    overflow: hidden;\n    box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n        0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n`;\n\nexport const ContactItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 10px;\n    font-size: 16px;\n    button {\n        width: fit-content;\n        border-radius: 5px;\n        border-color: #879cb7;\n        text-align: center;\n        font-size: 12px;\n        margin-left: 10px;\n        cursor: pointer;\n        background-color: #edf3fb;\n        outline: none;\n        &:hover {\n            background-color: #879cb7;\n            color: #edf3fb;\n        }\n    }\n`;\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  width: 300px;\n  background-color: #fff;\n  padding: 20px;\n  border: 1px solid #879cb7;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n`;\n\nexport const TitleInput = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  text-align: center;\n  font-weight: 700;\n  span {\n    color: red;\n  }\n`;\n\nexport const InputField = styled.input`\n  padding: 5px;\n  font-size: 16px;\n  color: grey;\n  text-align: center;\n  font-weight: 500;\n  border-color: #879cb7;\n  border-radius: 5px;\n  background-color: aliceblue;\n  box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n  outline: none;\n`;\n\nexport const ButtonAdd = styled.button`\n  width: fit-content;\n  border-radius: 10px;\n  border-color: #879cb7;\n  text-align: center;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #edf3fb;\n  outline: none;\n  &:hover {\n    background-color: #879cb7;\n    color: #edf3fb;\n  }\n`;\n\nexport const WrapperBtn = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { useState } from 'react';\nimport 'react-native-get-random-values';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateContact } from 'redux/contacts/contactsSlice';\nimport {\n  FormWrapper,\n  ButtonAdd,\n  TitleInput,\n  InputField,\n  WrapperBtn,\n} from './UpdateForm.styled';\nimport { selectContacts } from 'redux/selectors/selectors';\n\nexport const UpdateForm = ({ dataUser, setData }) => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // функція отримання даних з полів введення\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const contacts = useSelector(selectContacts);\n\n  // функція відправки даних до state\n  const handleSubmit = event => {\n    event.preventDefault();\n    const doubleContact =\n      contacts.findIndex(contact => contact.name === name) === -1;\n\n    if (doubleContact) {\n      dispatch(updateContact({ id: dataUser.id, name, number }));\n      setData(null);\n    } else {\n      alert(`${name} is already in contacts.`);\n    }\n    reset();\n  };\n\n  const cancel = () => {\n    setData(null);\n  };\n\n  // функція очищення значень форми\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <TitleInput>\n        <p>\n          Current name: <span>{dataUser.name.toUpperCase()}</span>\n        </p>\n        <InputField\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"new name\"\n          required\n          onChange={handleChange}\n        />\n      </TitleInput>\n\n      <TitleInput>\n        <p>\n          Current number: <span>{dataUser.number}</span>\n        </p>\n        <InputField\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"new number\"\n          required\n          onChange={handleChange}\n        />\n      </TitleInput>\n      <WrapperBtn>\n        <ButtonAdd type=\"button\" onClick={() => cancel()}>\n          Cancel\n        </ButtonAdd>\n        <ButtonAdd type=\"submit\">Update contact</ButtonAdd>\n      </WrapperBtn>\n    </FormWrapper>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { ListOfContact, ContactItem } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsSlice';\nimport { selectVisibleContact, selectLoading } from 'redux/selectors/selectors';\nimport { UpdateForm } from 'components/updateForm/UpdateForm';\nimport { fetchContacts } from 'redux/contacts/contactsSlice';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n\n  const [data, setData] = useState(null);\n\n  const contacts = useSelector(selectVisibleContact);\n  const loading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    // console.log(data);\n  }, [data, dispatch]);\n\n  return (\n    <ListOfContact>\n      {data && <UpdateForm dataUser={data} setData={setData} />}\n      {!data &&\n        contacts.map(contact => (\n          <ContactItem key={contact.id}>\n            {contact.name}: {contact.number}\n            {!loading && (\n              <div>\n                <button\n                  type=\"button\"\n                  onClick={() =>\n                    setData({\n                      id: contact.id,\n                      name: contact.name,\n                      number: contact.number,\n                    })\n                  }\n                >\n                  Update\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                >\n                  Delete\n                </button>\n              </div>\n            )}\n          </ContactItem>\n        ))}\n    </ListOfContact>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    width: 300px;\n    background-color: #fff;\n    padding: 20px;\n    border: 1px solid #879cb7;\n    margin-bottom: 20px;\n    border-radius: 10px;\n    box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n        0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n`;\n\nexport const TitleInput = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin-bottom: 20px;\n    font-size: 24px;\n    text-align: center;\n    font-weight: 700;\n`;\n\nexport const InputField = styled.input`\n    padding: 5px;\n    font-size: 24px;\n    color: grey;\n    text-align: center;\n    font-weight: 500;\n    border-color: #879cb7;\n    border-radius: 5px;\n    background-color: aliceblue;\n    box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n        0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n    outline: none;\n`;\n\nexport const ButtonAdd = styled.button`\n    margin-left: auto;\n    margin-right: auto;\n    width: fit-content;\n    border-radius: 10px;\n    border-color: #879cb7;\n    text-align: center;\n    font-size: 20px;\n    cursor: pointer;\n    background-color: #edf3fb;\n    outline: none;\n    &:hover {\n        background-color: #879cb7;\n        color: #edf3fb;\n    }\n`;\n","import { useState } from 'react';\nimport 'react-native-get-random-values';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsSlice';\nimport {\n  FormWrapper,\n  ButtonAdd,\n  TitleInput,\n  InputField,\n} from './ContactForm.styled';\nimport { selectContacts } from 'redux/selectors/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // функція отримання даних з полів введення\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const contacts = useSelector(selectContacts);\n\n  // функція відправки даних до state\n  const handleSubmit = event => {\n    event.preventDefault();\n    const doubleContact =\n      contacts.findIndex(contact => contact.name === name) === -1;\n\n    if (doubleContact) {\n      dispatch(addContact({ name, number }));\n    } else {\n      alert(`${name} is already in contacts.`);\n    }\n    reset();\n  };\n\n  // функція очищення значень форми\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <TitleInput>\n        Name\n        <InputField\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          required\n          onChange={handleChange}\n        />\n      </TitleInput>\n\n      <TitleInput>\n        Number\n        <InputField\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          required\n          onChange={handleChange}\n        />\n      </TitleInput>\n      <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n    </FormWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TitleFindInput = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n    margin-right: auto;\n    width: 540px;\n  margin-bottom: 20px;\n  gap: 5px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const InputFindField = styled.input`\n  padding: 5px;\n  font-size: 20px;\n  color: grey;\n  text-align: center;\n  font-weight: 500;\n  border-color: #879cb7;\n  border-radius: 5px;\n  background-color: #f1fff0;\n  box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n  outline: none;\n`;\n","import { TitleFindInput, InputFindField } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { change } from 'redux/filter/filterSlice';\nimport { selectFilterValue } from 'redux/selectors/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  // функція отримання даних з поля filter\n  const changeFilter = event => {\n    dispatch(change(event.currentTarget.value));\n  };\n\n  const value = useSelector(selectFilterValue); // отримання значення тексту із state\n\n  return (\n    <TitleFindInput>\n      Find contacts by name\n      <InputFindField type=\"text\" value={value} onChange={changeFilter} />\n    </TitleFindInput>\n  );\n};\n","import { ContactsList } from 'components/contactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectLoading,\n  selectContacts,\n  selectError,\n} from 'redux/selectors/selectors';\nimport { fetchContacts } from 'redux/contacts/contactsSlice';\nimport { ContactForm } from 'components/contactForm/ContactForm';\nimport { Filter } from 'components/filter/Filter';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts:</h2>\n      <Filter />\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {contacts.length !== 0 && <ContactsList />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ListOfContact","styled","_templateObject","_taggedTemplateLiteral","ContactItem","_templateObject2","FormWrapper","TitleInput","InputField","_templateObject3","ButtonAdd","_templateObject4","WrapperBtn","_templateObject5","UpdateForm","_ref","dataUser","setData","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","event","_event$currentTarget","currentTarget","value","contacts","useSelector","selectContacts","reset","_jsxs","onSubmit","preventDefault","findIndex","contact","updateContact","id","alert","concat","children","_jsx","toUpperCase","type","placeholder","required","onChange","onClick","ContactsList","data","selectVisibleContact","loading","selectLoading","useEffect","fetchContacts","map","deleteContact","ContactForm","addContact","TitleFindInput","InputFindField","Filter","selectFilterValue","change","error","selectError","length"],"sourceRoot":""}