{"version":3,"file":"static/js/759.3103b9ff.chunk.js","mappings":"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","sources":["components/contactList/ContactList.styled.jsx","components/contactList/ContactList.jsx","components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.jsx","components/filter/Filter.styled.jsx","components/filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListOfContact = styled.ul`\nmargin-left: auto;\n    margin-right: auto;\n    width: 500px;\n    padding: 20px;\n    background-color: #fff;\n    border: 1px solid #879cb7;\n    border-radius: 15px;\n    overflow: hidden;\n    box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n        0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n`;\n\nexport const ContactItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 10px;\n    font-size: 16px;\n    button {\n        width: fit-content;\n        border-radius: 5px;\n        border-color: #879cb7;\n        text-align: center;\n        font-size: 12px;\n        cursor: pointer;\n        background-color: #edf3fb;\n        outline: none;\n        &:hover {\n            background-color: #879cb7;\n            color: #edf3fb;\n        }\n    }\n`;\n","import { ListOfContact, ContactItem } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsSlice';\nimport {\n  selectFilterValue,\n  selectContacts,\n  selectLoading,\n} from 'redux/selectors/selectors';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n\n  // отримання значення тексту із state.filter для пошуку збігу у іменах контактів\n  const contactSearch = useSelector(selectFilterValue);\n\n  // отримання переліку контактів\n  const contacts = useSelector(selectContacts);\n\n  // створення нового списку контактів із тих контактів, імена яких включають текст із state.filter\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(contactSearch.toLowerCase())\n  );\n\n  const loading = useSelector(selectLoading);\n\n  return (\n    <ListOfContact>\n      {visibleContacts.map(contact => (\n        <ContactItem key={contact.id}>\n          {contact.name}: {contact.number}\n          {!loading && (\n            <div>\n              <button\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(contact.id))}\n              >\n                Delete\n              </button>\n            </div>\n          )}\n          {/* {loading && <button type=\"button\">Delete</button>} */}\n        </ContactItem>\n      ))}\n    </ListOfContact>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    width: 300px;\n    background-color: #fff;\n    padding: 20px;\n    border: 1px solid #879cb7;\n    margin-bottom: 20px;\n    border-radius: 10px;\n    box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n        0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n`;\n\nexport const TitleInput = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin-bottom: 20px;\n    font-size: 24px;\n    text-align: center;\n    font-weight: 700;\n`;\n\nexport const InputField = styled.input`\n    padding: 5px;\n    font-size: 24px;\n    color: grey;\n    text-align: center;\n    font-weight: 500;\n    border-color: #879cb7;\n    border-radius: 5px;\n    background-color: aliceblue;\n    box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n        0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n    outline: none;\n`;\n\nexport const ButtonAdd = styled.button`\n    margin-left: auto;\n    margin-right: auto;\n    width: fit-content;\n    border-radius: 10px;\n    border-color: #879cb7;\n    text-align: center;\n    font-size: 20px;\n    cursor: pointer;\n    background-color: #edf3fb;\n    outline: none;\n    &:hover {\n        background-color: #879cb7;\n        color: #edf3fb;\n    }\n`;\n","import { useState } from 'react';\nimport 'react-native-get-random-values';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsSlice';\nimport {\n  FormWrapper,\n  ButtonAdd,\n  TitleInput,\n  InputField,\n} from './ContactForm.styled';\nimport { selectContacts } from 'redux/selectors/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // функція отримання даних з полів введення\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const contacts = useSelector(selectContacts);\n\n  // функція відправки даних до state\n  const handleSubmit = event => {\n    event.preventDefault();\n    const doubleContact =\n      contacts.findIndex(contact => contact.name === name) === -1;\n\n    if (doubleContact) {\n      dispatch(addContact({ name, number }));\n    } else {\n      alert(`${name} is already in contacts.`);\n    }\n    reset();\n  };\n\n  // функція очищення значень форми\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <TitleInput>\n        Name\n        <InputField\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          required\n          onChange={handleChange}\n        />\n      </TitleInput>\n\n      <TitleInput>\n        Number\n        <InputField\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          required\n          onChange={handleChange}\n        />\n      </TitleInput>\n      <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n    </FormWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TitleFindInput = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n    margin-right: auto;\n    width: 540px;\n  margin-bottom: 20px;\n  gap: 5px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const InputFindField = styled.input`\n  padding: 5px;\n  font-size: 20px;\n  color: grey;\n  text-align: center;\n  font-weight: 500;\n  border-color: #879cb7;\n  border-radius: 5px;\n  background-color: #f1fff0;\n  box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n  outline: none;\n`;\n","import { TitleFindInput, InputFindField } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { change } from 'redux/filter/filterSlice';\nimport { selectFilterValue } from 'redux/selectors/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  // функція отримання даних з поля filter\n  const changeFilter = event => {\n    dispatch(change(event.currentTarget.value));\n  };\n\n  const value = useSelector(selectFilterValue); // отримання значення тексту із state\n\n  return (\n    <TitleFindInput>\n      Find contacts by name\n      <InputFindField type=\"text\" value={value} onChange={changeFilter} />\n    </TitleFindInput>\n  );\n};\n","import { ContactsList } from 'components/contactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectLoading,\n  selectContacts,\n  selectError,\n} from 'redux/selectors/selectors';\nimport { fetchContacts } from 'redux/contacts/contactsSlice';\nimport { ContactForm } from 'components/contactForm/ContactForm';\nimport { Filter } from 'components/filter/Filter';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts:</h2>\n      <Filter />\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {contacts.length !== 0 && <ContactsList />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ListOfContact","styled","_templateObject","_taggedTemplateLiteral","ContactItem","_templateObject2","ContactsList","dispatch","useDispatch","contactSearch","useSelector","selectFilterValue","visibleContacts","selectContacts","filter","contact","name","toLowerCase","includes","loading","selectLoading","_jsx","children","map","_jsxs","number","type","onClick","deleteContact","id","FormWrapper","TitleInput","InputField","_templateObject3","ButtonAdd","_templateObject4","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","event","_event$currentTarget","currentTarget","value","contacts","reset","onSubmit","preventDefault","findIndex","addContact","alert","concat","required","onChange","TitleFindInput","InputFindField","Filter","change","error","selectError","useEffect","fetchContacts","length"],"sourceRoot":""}